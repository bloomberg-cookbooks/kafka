# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

kafka.logs.dir=logs

#kafka.logs.fileappender=org.apache.log4j.DailyRollingFileAppender
kafka.logs.fileappender=<%= @fileAppender%>
kafka.logs.maxfilesize=<%= @maxFileSize%>
kafka.logs.maxbackupindex=<%= @maxNumFiles%>
kafka.logs.logger.kafka=<%= @loggerLevelKafka%>
kafka.logs.logger.kafka.network.RequestChannel=<%= @loggerLevelKafkaNetworkRequestLevel%>
kafka.logs.logger.kafka=<%= @loggerLevelKafka%>
kafka.logs.logger.kafka=<%= @loggerLevelKafka%>
kafka.logs.logger.kafka=<%= @loggerLevelKafka%>
kafka.logs.logger.kafka=<%= @loggerLevelKafka%>
kafka.logs.logger.kafka=<%= @loggerLevelKafka%>
kafka.logs.logger.kafka=<%= @loggerLevelKafka%>

log4j.rootLogger=INFO, stdout 

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n

log4j.appender.kafkaAppender=${kafka.logs.fileappender}
log4j.appender.kafkaAppender.File=${kafka.logs.dir}/server.log
log4j.appender.kafkaAppender.MaxFileSize=${kafka.logs.maxfilesize}
log4j.appender.kafkaAppender.MaxBackupIndex=${kafka.logs.maxbackupindex}
log4j.appender.kafkaAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.kafkaAppender.layout.ConversionPattern=[%d] %p %m (%c)%n

log4j.appender.stateChangeAppender=${kafka.logs.fileappender}
log4j.appender.stateChangeAppender.File=${kafka.logs.dir}/state-change.log
log4j.appender.stateChangeAppender.MaxFileSize=${kafka.logs.maxfilesize}
log4j.appender.stateChangeAppender.MaxBackupIndex=${kafka.logs.maxbackupindex}
log4j.appender.stateChangeAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.stateChangeAppender.layout.ConversionPattern=[%d] %p %m (%c)%n

log4j.appender.requestAppender=${kafka.logs.fileappender}
log4j.appender.requestAppender.File=${kafka.logs.dir}/kafka-request.log
log4j.appender.requestAppender.MaxFileSize=${kafka.logs.maxfilesize}
log4j.appender.requestAppender.MaxBackupIndex=${kafka.logs.maxbackupindex}
log4j.appender.requestAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.requestAppender.layout.ConversionPattern=[%d] %p %m (%c)%n

log4j.appender.cleanerAppender=${kafka.logs.fileappender}
log4j.appender.cleanerAppender.File=${kafka.logs.dir}/log-cleaner.log
log4j.appender.cleanerAppender.MaxFileSize=${kafka.logs.maxfilesize}
log4j.appender.cleanerAppender.MaxBackupIndex=${kafka.logs.maxbackupindex}
log4j.appender.cleanerAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.cleanerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n

log4j.appender.controllerAppender=${kafka.logs.fileappender}
log4j.appender.controllerAppender.File=${kafka.logs.dir}/controller.log
log4j.appender.controllerAppender.MaxFileSize=${kafka.logs.maxfilesize}
log4j.appender.controllerAppender.MaxBackupIndex=${kafka.logs.maxbackupindex}
log4j.appender.controllerAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.controllerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n

# Turn on all our debugging info
#log4j.logger.kafka.producer.async.DefaultEventHandler=DEBUG, kafkaAppender
#log4j.logger.kafka.client.ClientUtils=DEBUG, kafkaAppender
#log4j.logger.kafka.perf=DEBUG, kafkaAppender
#log4j.logger.kafka.perf.ProducerPerformance$ProducerThread=DEBUG, kafkaAppender
#log4j.logger.org.I0Itec.zkclient.ZkClient=DEBUG
log4j.logger.kafka=<%= @loggerLevelKafka%>, kafkaAppender

log4j.logger.kafka.network.RequestChannel$=<%= @loggerLevelKafkaNetworkRequestChannel%>, requestAppender
log4j.additivity.kafka.network.RequestChannel$=false

log4j.logger.kafka.network.Processor=<%= @loggerLevelKafkaNetworkProcessor%>, requestAppender
log4j.additivity.kafka.network.Processor=false

#log4j.logger.kafka.network.Processor=TRACE, requestAppender
#log4j.logger.kafka.server.KafkaApis=TRACE, requestAppender
#log4j.additivity.kafka.server.KafkaApis=false
log4j.logger.kafka.request.logger=<%= @loggerLevelKafkaRequestLogger%>, requestAppender
log4j.additivity.kafka.request.logger=false

log4j.logger.kafka.controller=<%= @loggerLevelKafkaController%>, controllerAppender
log4j.additivity.kafka.controller=false

log4j.logger.kafka.log.LogCleaner=<%= @loggerLevelKafkaLogCleaner%>, cleanerAppender
log4j.additivity.kafka.log.LogCleaner=false

log4j.logger.state.change.logger=<%= @loggerLevelStateChangeLogger%>, stateChangeAppender
log4j.additivity.state.change.logger=false
